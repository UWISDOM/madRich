% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterSets.R
\name{clusterSets}
\alias{clusterSets}
\title{Perform Hierarchical Clustering of Gene Sets Based on the Overlap Coefficient}
\usage{
clusterSets(
  df = NULL,
  enrich_method = "hypergeometric",
  categories = NULL,
  subcategories = NULL,
  db = NULL,
  ID = "SYMBOL",
  species = "human",
  hclust_height = 0.7,
  fdr_cutoff = NULL,
  abs_NES_cutoff = NULL,
  kK_cutoff = NULL,
  group_name = NULL
)
}
\arguments{
\item{df}{result of enrichment function. Should contain a column of pathway names ("pathway"), p-values ("pvalue"), gene set categories ("gs_cat"), and gene set subcategories where applicable ("gs_subcat"). If filtering by FDR, k/K, or NES, these values must be included as "FDR", "k/K", or "NES", respectively.}

\item{enrich_method}{"hypergeometric" or "gsea." "gsea" will separate result by positive/negative NES within your filtered df.}

\item{categories}{a vector of Broad gene set categories included among the pathway names in df}

\item{subcategories}{a named vector of Broad gene set subcategories (names are corresponding cats provided in 'categories')}

\item{db}{optional, custom gene set database formatted like MSigDB}

\item{ID}{"SYMBOL", "ENSEMBL", or "ENTREZ". What format of gene ID do you want to use for clustering.}

\item{species}{"human" or "mouse" for msigDB}

\item{hclust_height}{Height for cutting tree for hclust. Value must be between 0 and 1}

\item{fdr_cutoff}{optional, high-end filter to apply to df before clustering}

\item{abs_NES_cutoff}{optional, low-end. absolute value filter to apply to df before clustering of GSEA results}

\item{kK_cutoff}{optional, low-end filter to apply to df before clustering of hypergeometric results}

\item{group_name}{optional, if your dataset contains multiple groups in a 'group' column, select pathways from provided group. Otherwise, all pathways passing filter will be clustered.}
}
\value{
a list containing the input data frame, formatted reference database, cluster membership, and distance matrix/matrices. To be used in downstream visualizations.
}
\description{
Perform Hierarchical Clustering of Gene Sets Based on the Overlap Coefficient
}
\examples{
# Run GSEA using SEARchways
gene_list <- SEARchways::example.gene.list
df1 <- SEARchways::BIGsea(gene_list=gene_list, 
             category="C2", subcategory="CP", ID="ENSEMBL")
df2 <- SEARchways::BIGsea(gene_list=gene_list, 
             category="C5", subcategory="GO:BP", ID="ENSEMBL")
df <- dplyr::bind_rows(df1, df2)

res <- clusterSets(df = df, enrich_method="hypergeometric",
                ID = "ENSEMBL",
                categories = c("C2","C5"),
                #subcategories = c("C2" = "CP", "C5" = "GO:BP"),
                hclust_height = 0.3,
                group_name = "HRV1")

# Run enrichment using SEARchways
gene_list2 <- list(HRV1 = names(SEARchways::example.gene.list[[1]]),
                  HRV2 = names(SEARchways::example.gene.list[[2]]))
df1 <- SEARchways::BIGprofiler(gene_list=gene_list2, 
             category="C5", subcategory="GO:MF", ID="ENSEMBL")
df2 <- SEARchways::BIGprofiler(gene_list=gene_list2, 
             category="C5", subcategory="GO:BP", ID="ENSEMBL")
df <- dplyr::bind_rows(df1, df2)

res <- clusterSets(df = df, enrich_method="hypergeometric",
                ID = "ENSEMBL",
                categories = c("C5"),
                subcategories = c("C5" = "GO:MF", "C5" = "GO:BP"),
                hclust_height = 0.3,
                group_name = "HRV1",
                fdr_cutoff = 0.3)
}
